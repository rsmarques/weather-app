"use strict";angular.module("weatherApp",["weatherApp.services","ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngMaterial","ngGeolocation"]).constant("API_URL","api/").config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/weather.html",controller:"WeatherCtrl",controllerAs:"weather"}).otherwise({redirectTo:"/"})}]).config(["$mdIconProvider",function(a){a.fontSet("md","material-icons")}]),angular.module("weatherApp").controller("WeatherCtrl",["$scope","$geolocation","$mdDialog","$mdToast","Weather",function(a,b,c,d,e){a.init=function(){b.getCurrentPosition({timeout:6e4}).then(function(b){a.currentLocation={type:"geolocation",args:{lat:b.coords.latitude,lon:b.coords.longitude}},a.getCurrentForecast()},function(b){a.showLocationPrompt()})},a.showLocationPrompt=function(b){var d=c.prompt().title("What's your location?").placeholder("London, UK").ariaLabel("Location").targetEvent(b).ok("Done");c.show(d).then(function(b){a.currentLocation={type:"string",args:{q:b}},a.getCurrentForecast()})},a.increaseForecastIndex=function(){return a.forecastIndex<a.forecast.length-1&&a.forecastIndex++,!0},a.decreaseForecastIndex=function(){return a.forecastIndex>0&&a.forecastIndex--,!0},a.setForecastIndex=function(b){return a.forecastIndex=b,!0},a.getCurrentForecast=function(){if(!a.currentLocation.args)return!1;a.now=moment().unix();var b={units:"metric"};for(var c in a.currentLocation.args)b[c]=a.currentLocation.args[c];e.getForecast(b,function(c){a.locationStr=c.city.name+", "+c.city.country,a.forecast=[],a.forecastIndex=0;var d=0;angular.forEach(c.list,function(b){return b.dt<a.now?!1:(Object.keys(b.temp).map(function(a){b.temp[a]=parseInt(b.temp[a])}),b.weekDay=moment.unix(b.dt).format("dddd"),b.dateStr=moment.unix(b.dt).format("dddd, Do MMMM"),b.icon="images/icons_weather/"+b.weather[0].icon+".svg",b.index=d,b.className="weather-forecast-day-"+d,b.weather[0].description=b.weather[0].description.replace(/\b[a-z]/g,function(a){return a.toUpperCase()}),d++,a.forecast.push(b),!0)}),e.getWeather(b,function(b){a.forecast[0].weather=b.weather,a.forecast[0].weather[0].description=b.weather[0].description.replace(/\b[a-z]/g,function(a){return a.toUpperCase()}),a.forecast[0].temp.day=parseInt(b.main.temp),a.forecast[0].icon="images/icons_weather/"+b.weather[0].icon+".svg",a.forecast[0].speed=b.wind.speed,a.forecast[0].humidity=b.main.humidity})},function(a){d.show(d.simple().textContent(a.data&&a.data.message?a.data.message:"Error getting weather!").position("top right").hideDelay(3e3))})},a.init()}]),angular.module("weatherApp.services",["ngResource"]).factory("Weather",["$resource","API_URL",function(a,b){return a(b,{},{getWeather:{url:b+"weather",method:"GET",params:{q:"@q",lat:"@lat",lon:"@lon",units:"@units",cnt:"@cnt"}},getForecast:{url:b+"forecast",method:"GET",params:{q:"@q",lat:"@lat",lon:"@lon",units:"@units",cnt:"@cnt"}}})}]),angular.module("weatherApp").run(["$templateCache",function(a){a.put("views/weather.html",'<div layout="column" ng-class="forecast[forecastIndex].className" flex> <div ng-if="forecast" ng-cloak class="weather-area demo-swipe" layout="column" layout-align="center center" md-swipe-left="increaseForecastIndex()" md-swipe-right="decreaseForecastIndex()"> <div layout="row"> <img class="weather-icon" ng-src="{{ forecast[forecastIndex].icon }}" class="md-card-image"> <md-list-item class="md-3-line"> <div ng-cloak layout="column" class="md-list-item-text" layout-align="center start"> <div layout="row" class="location-button"> <h2>{{ locationStr }}</h2> <md-button class="md-icon-button" aria-label="Location" ng-click="showLocationPrompt($event)"> <img ng-src="images/logo/logo.svg" class="md-card-image"> </md-button> </div> <h3>{{ forecast[forecastIndex].dateStr }}</h3> <p>{{ forecast[forecastIndex].weather[0].description }}</p> </div> </md-list-item> </div> <h1>{{ forecast[forecastIndex].temp.day + \'ยบ\' }}</h1> <div layout="row" class="stats-row" layout-align="center center"> <div flex="33" layout="column" layout-align="center center"> <img class="stats-icon" ng-src="images/icons_weather/humidity.svg" class="md-card-image"> <h4>{{ forecast[forecastIndex].humidity + \' %\' }}</h4> </div> <p class="stats-divider">|</p> <div flex="33" layout="column" layout-align="center center"> <img class="stats-icon" ng-src="images/icons_weather/thermometer.svg" class="md-card-image"> <h4>{{ forecast[forecastIndex].temp.min + \'ยบ\' }} - {{ forecast[forecastIndex].temp.max + \'ยบ\' }}</h4> </div> <p class="stats-divider">|</p> <div flex="33" layout="column" layout-align="center center"> <img class="stats-icon" ng-src="images/icons_weather/wind.svg" class="md-card-image"> <h4>{{ forecast[forecastIndex].speed + \' m/s\' }}</h4> </div> </div> </div> <div ng-if="!forecast" layout="column" layout-align="center center" class="initial-screen"> <md-button class="md-icon-button" aria-label="Location" ng-click="showLocationPrompt($event)"> <img ng-src="images/logo/logo.svg" class="md-card-image"> </md-button> <h2>Weather App</h2> </div> </div> <div ng-if="forecast" ng-cloak layout="column" layout-align="center center"> <div layout="row" class="weather-forecast" layout-align="center center"> <md-list-item ng-class="f.className" ng-click="setForecastIndex(f.index)" ng-repeat="f in forecast | limitTo : 4 : 1" flex="25"> <div layout="column" class="md-list-item-text weather-forecast-column" layout-align="center center"> <h6>{{ f.weekDay}}</h6> <img class="stats-icon" ng-src="{{ f.icon }}" class="md-card-image"> <h6>{{ f.temp.max + \'ยบ\'}}</h6> </div> </md-list-item> </div> </div>')}]);